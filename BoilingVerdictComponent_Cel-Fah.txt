class BoilingVerdict extends React.Component {

    constructor(props) {
        super(props);
    }

    render(){
        console.log("temperature22::   "+this.props.temp)
        return(
            this.props.temp >= 100 ? <p>The water would boil.</p> : <p>The water would not boil.</p>
        )
    }
}

const scaleNames = {
    c : "Celcius",
    f : "Fahrenheit"
}

class TemperatureInput extends React.Component {
    constructor(props) {
        super(props);
        this.updateChange = this.updateChange.bind(this);
    }

    updateChange(event) {
        this.props.onTemperatureChange(event.target.value);
    }

    render() {
        const temperature = this.props.temperature;
        const scale = this.props.scale;
        return(
            <fieldset>
                <legend> Enter temperature in {scaleNames[scale]} </legend>
                <input value={temperature} onChange={this.updateChange} />
            </fieldset>
        )
    }
}
class Calculator extends React.Component {

    constructor(){
        super();
        this.state = {
            temperature:"",
            scale:"c"
        }

        this.handleCelsiusChange = this.handleCelsiusChange.bind(this);
        this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);
    }

    handleCelsiusChange(temperature) {
        this.setState({scale: 'c', temperature});    
    }

    handleFahrenheitChange(temperature) {
        this.setState({scale: 'f', temperature});  
    }

    render(){
        const temperature = this.state.temperature;
        const scale = this.state.scale;
        const celsius = scale === "f" ? tryConvert(temperature, toCelcius): temperature;
        const fahrenheit = scale === "c" ? tryConvert(temperature, toFahrenheit): temperature;

        return(
            <div>
                <TemperatureInput scale="c" temperature = {celsius} onTemperatureChange={this.handleCelsiusChange}/>
                <TemperatureInput scale="f" temperature = {fahrenheit} onTemperatureChange={this.handleFahrenheitChange}/>
                <BoilingVerdict temp = {parseFloat(celsius)} />
            </div>    
        )
    }    
    
}

function toCelcius(fahrenheit) {
    return (fahrenheit - 32) * 5 / 9;
}

function toFahrenheit(celcius) {
    return (celcius * 9 / 5) + 32;
}

function tryConvert(temperature, convert) {
    const temp = parseFloat(temperature);

    if(Number.isNaN(temp)) {
        return '';
    }

    const output = convert(temp);
    const rounded = Math.round(output * 1000) / 1000;
    return rounded;
}

class App extends React.Component {
    render() {
        return <Calculator />
    }
}